{"ast":null,"code":"var _jsxFileName = \"/Users/jordanbruner/Desktop/Projects/EmptyStillsFront/emptysills/src/Login/index.js\";\nimport React, { Component } from 'react';\nimport { Form, Segment, Label, Button, Card, Message, Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const loginUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/login`;\n      const loginResponse = await fetch(loginUrl, {\n        method: \"POST\",\n        body: JSON.stringify(this.state),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedResponse = await loginResponse.json();\n      console.log(parsedResponse);\n\n      if (parsedResponse.status.code === 200) {\n        console.log(parsedResponse.data.id);\n        localStorage.setItem('sessionUserId', parsedResponse.data.id);\n        this.props.history.push('/home');\n      } else {\n        this.setState({\n          errorMsg: parsedResponse.status.message\n        });\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(Card, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      centered: \"true\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Input, {\n      name: \"email\",\n      value: this.state.email,\n      type: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Input, {\n      name: \"password\",\n      value: this.state.password,\n      type: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Login\"), this.state.errorMsg ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.errorMsg) : null)), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Not a member? Sign up now!\"), React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Create Account\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jordanbruner/Desktop/Projects/EmptyStillsFront/emptysills/src/Login/index.js"],"names":["React","Component","Form","Segment","Label","Button","Card","Message","Header","Link","Login","constructor","handleChange","e","setState","currentTarget","name","value","handleSubmit","preventDefault","loginUrl","process","env","REACT_APP_API_URL","loginResponse","fetch","method","body","JSON","stringify","state","credentials","headers","parsedResponse","json","console","log","status","code","data","id","localStorage","setItem","props","history","push","errorMsg","message","email","password","render","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Form, Segment, Label, Button, Card, Message, Header} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom'\n\nclass Login extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\temail: \"\",\n\t\t\tpassword: \"\"\n\t\t}\n\t}\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n\t}\n\thandleSubmit = async (e) => {\n        e.preventDefault();\n        const loginUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/login`;\n        const loginResponse = await fetch(loginUrl, {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        \n        const parsedResponse = await loginResponse.json();\n\t\tconsole.log(parsedResponse);\n\n        if(parsedResponse.status.code === 200){\n\t\t\tconsole.log(parsedResponse.data.id)\n\t\t\tlocalStorage.setItem('sessionUserId', parsedResponse.data.id)\n\t\t\tthis.props.history.push('/home')\n        } else{\n            this.setState({\n                errorMsg: parsedResponse.status.message\n            })\n        }\n    }\n\trender(){\n\t\treturn(\n\t\t\t<Card centered>\n\t\t\t\t<Card.Content color=\"black\">\n\t\t\t\t\t<Header centered=\"true\" style={{color: \"white\"}}>Login</Header>\n\t\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<Label>Email</Label>\n\t\t\t\t\t\t<Form.Input name=\"email\" value={this.state.email} type=\"email\" onChange={this.handleChange}/>\n\t\t\t\t\t\t<Label>Password</Label>\n\t\t\t\t\t\t<Form.Input name=\"password\" value={this.state.password} type=\"password\" onChange={this.handleChange}/>\n\t\t\t\t\t\t<Button color=\"green\">Login</Button>\n\t\t\t\t\t\t{this.state.errorMsg ? <Message negative>{this.state.errorMsg}</Message> : null}\n\t\t\n\t\t\t\t\t</Form>\n\t\t\t\t</Card.Content>\n\t\t\t\t<Card.Content>\n\t\t\t\t\t<Label>Not a member? Sign up now!</Label>\n\t\t\t\t\t<Link to=\"/register\">\n\t\t\t\t\t\t<Button color=\"green\">Create Account</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</Card.Content>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}