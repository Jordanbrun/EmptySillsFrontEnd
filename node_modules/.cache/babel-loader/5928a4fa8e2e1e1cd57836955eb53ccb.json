{"ast":null,"code":"var _jsxFileName = \"/Users/jordanbruner/Desktop/Projects/EmptyStillsFront/emptysills/src/SillsList/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport NavBar from '../Nav';\nimport { Button, Card, Container, Image, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nfunction SillsList(props) {\n  const mappedPlants = props.searchedPlant.map(plant => {\n    const deletePlant = props.plantId.map((data, i) => {\n      if (data.plant_id === plant.id) {\n        console.log(plant.id);\n        console.log(data.plant_id);\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"red\",\n          onClick: () => props.removePlant(data.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Remove Plant from Sill\"), React.createElement(Button, {\n          color: \"blue\",\n          onClick: () => props.waterPlant(data.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \" Water Plant\"));\n      }\n    });\n    return React.createElement(Card, {\n      key: plant.id,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, plant.images === undefined || plant.images === null || plant.images[0] === null || plant.images[0] === undefined || plant.images[0].url === undefined ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"No Available Image\") : React.createElement(Image, {\n      src: plant.images[0].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      name: \"leaf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \" \", plant.common_name), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, plant.scientific_name), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, plant.family_common_name), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, deletePlant)));\n  });\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Card.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, mappedPlants));\n}\n\nexport default SillsList;","map":{"version":3,"sources":["/Users/jordanbruner/Desktop/Projects/EmptyStillsFront/emptysills/src/SillsList/index.js"],"names":["React","Component","Fragment","NavBar","Button","Card","Container","Image","Icon","Link","SillsList","props","mappedPlants","searchedPlant","map","plant","deletePlant","plantId","data","i","plant_id","id","console","log","removePlant","waterPlant","images","undefined","url","common_name","scientific_name","family_common_name"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport NavBar from '../Nav';\nimport {Button, Card, Container,Image, Icon} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nfunction SillsList(props){\n    const mappedPlants = props.searchedPlant.map((plant) => {\n        const deletePlant = props.plantId.map((data, i) => {\n            if(data.plant_id === plant.id){\n                console.log(plant.id)\n                console.log(data.plant_id)\n            return(\n                <React.Fragment>\n                    <Button color='red' onClick={ () => props.removePlant(data.id)} >Remove Plant from Sill</Button>\n                    <Button color='blue' onClick={ () => props.waterPlant(data.id)} > Water Plant</Button>\n                </React.Fragment>\n            )\n        }\n\n       \n    })\n        return(\n            <Card key={plant.id} color='black'>\n                <Card.Header>\n                {\n                    (plant.images === undefined || plant.images === null || plant.images[0] === null || plant.images[0] === undefined || plant.images[0].url === undefined ) ? <div>No Available Image</div> : <Image src={plant.images[0].url}/>\n                }\n                <Icon name='leaf'/> {plant.common_name}</Card.Header>\n                <Card.Content>\n                    <Card.Description>{plant.scientific_name}</Card.Description>\n                    <Card.Description>{plant.family_common_name}</Card.Description>\n                    <Card.Description>{deletePlant}</Card.Description>\n                </Card.Content>\n            </Card>\n        )\n    })\n\n\n    return(\n        <Container>\n        <Card.Group>\n            {mappedPlants}\n        </Card.Group>\n        </Container>\n    )\n}\n\nexport default SillsList\n\n"]},"metadata":{},"sourceType":"module"}