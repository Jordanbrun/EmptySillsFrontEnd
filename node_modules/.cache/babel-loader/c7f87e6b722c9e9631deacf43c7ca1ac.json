{"ast":null,"code":"var _jsxFileName = \"/Users/jordanbruner/Desktop/Projects/EmptyStillsFront/emptysills/src/Register/index.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Image, Label, Message, Card, Header } from 'semantic-ui-react';\n\nclass Registration extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const registrationUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/register`;\n      const registerResponse = await fetch(registrationUrl, {\n        method: \"POST\",\n        body: JSON.stringify(this.state),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedResponse = await registerResponse.json();\n\n      if (parsedResponse.status.code === 201) {\n        console.log(parsedResponse);\n        localStorage.setItem('sessionUserId', parsedResponse.data.id);\n        this.props.history.push('/home');\n      } else {\n        this.setState({\n          errorMsg: parsedResponse.status.message\n        });\n      }\n    };\n\n    this.searchButton = () => {};\n\n    this.state = {\n      email: \"\",\n      display_name: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(Card, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(Image, {\n      src: \"https://i.ibb.co/7XcZ3YC/Logo-Makr-2-Y74t-W.png\",\n      size: \"small\",\n      centered: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Input, {\n      name: \"email\",\n      value: this.state.email,\n      type: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Display Name\"), React.createElement(Form.Input, {\n      name: \"display_name\",\n      value: this.state.display_name,\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Input, {\n      name: \"password\",\n      value: this.state.password,\n      type: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      onClick: this.searchButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Register\"), this.state.errorMsg ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.errorMsg) : null)));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/jordanbruner/Desktop/Projects/EmptyStillsFront/emptysills/src/Register/index.js"],"names":["React","Component","Form","Button","Image","Label","Message","Card","Header","Registration","constructor","handleChange","e","setState","currentTarget","name","value","handleSubmit","preventDefault","registrationUrl","process","env","REACT_APP_API_URL","registerResponse","fetch","method","body","JSON","stringify","state","credentials","headers","parsedResponse","json","status","code","console","log","localStorage","setItem","data","id","props","history","push","errorMsg","message","searchButton","email","display_name","password","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Image, Label, Message, Card, Header} from 'semantic-ui-react';\n\nclass Registration extends Component{\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            display_name: \"\",\n            password: \"\"\n        }\n    }\n    handleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const registrationUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/register`;\n        const registerResponse = await fetch(registrationUrl, {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        \n        const parsedResponse = await registerResponse.json();\n\n        if(parsedResponse.status.code === 201){\n            console.log(parsedResponse);\n            localStorage.setItem('sessionUserId', parsedResponse.data.id)\n            this.props.history.push('/home')\n        } else{\n            this.setState({\n                errorMsg: parsedResponse.status.message\n            })\n        }\n    }\n\n    searchButton = () => {\n\n    }\n\n    render(){\n        return(\n            <Card centered>\n                <Card.Content>\n                    <Header>Registration</Header>\n                    <Image src=\"https://i.ibb.co/7XcZ3YC/Logo-Makr-2-Y74t-W.png\" size='small' centered='true'></Image>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Label>Email</Label>\n                        <Form.Input name=\"email\" value={this.state.email} type=\"email\" onChange={this.handleChange}/>\n                        <Label>Display Name</Label>\n                        <Form.Input name=\"display_name\" value={this.state.display_name} type=\"text\" onChange={this.handleChange} />\n                        <Label>Password</Label>\n                        <Form.Input name=\"password\" value={this.state.password} type=\"password\" onChange={this.handleChange}/>\n                        <Button color=\"green\" onClick={this.searchButton} >Register</Button>\n                        {this.state.errorMsg ? <Message negative>{this.state.errorMsg}</Message> : null}\n                    </Form>\n                </Card.Content>\n            </Card>\n        )\n    }\n}\n\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}